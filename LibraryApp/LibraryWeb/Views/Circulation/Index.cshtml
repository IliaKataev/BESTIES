@model dynamic
@{
    ViewBag.Title = "Circulation";
    var currentIssues = ViewBag.CurrentIssues as List<LibraryWeb.Models.IssueDto>;
    var history = ViewBag.History as List<LibraryWeb.Models.IssueDto>;
}

<h2>Circulation</h2>

<div style="display:flex; gap:20px;">
    <!-- Customer Panel -->
    <div style="width:300px; border:1px solid #ccc; padding:10px;">
        <h4>Customer</h4>
        <input type="text" id="customer-id" placeholder="Enter customer ID" class="form-control" />
        <button id="load-customer" class="btn btn-primary mt-2">Circulation</button>
        <div id="customer-info" class="mt-2"></div>
        <button id="edit-customer" class="btn btn-secondary mt-2" disabled>Edit...</button>
    </div>

    <!-- Issue / Return Panel -->
    <div style="flex:1;">
        <h4>Issue / Return</h4>
        <input type="text" id="book-key" placeholder="Enter book ID" class="form-control" />
        <div id="book-title" class="mt-1"></div>
        <button id="issue-btn" class="btn btn-success mt-1" disabled>Issue</button>
        <button id="return-btn" class="btn btn-warning mt-1" disabled>Return</button>

        <h4 class="mt-3">Current Issues</h4>
        <table class="table table-striped" id="current-issues-table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Date of Issue</th>
                    <th>Return Until</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

        <h4 class="mt-3">History</h4>
        <table class="table table-striped" id="history-table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Date of Issue</th>
                    <th>Return Date</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        let selectedCustomer = null;

        // Load customer
        document.getElementById("load-customer").addEventListener("click", async () => {
            const customerId = parseInt(document.getElementById("customer-id").value);
            const res = await fetch(`/Circulation/LoadCustomer?customerId=${customerId}`);
            const data = await res.json();
            if (!data.success) { alert(data.message); return; }

            selectedCustomer = customerId;
            document.getElementById("customer-info").innerText = `ID: ${customerId}`;
            document.getElementById("edit-customer").disabled = false;

            populateTable("current-issues-table", data.currentIssues, true);
            populateTable("history-table", data.history, false);
        });

        // Populate table
        function populateTable(tableId, items, showRenew) {
            const tbody = document.getElementById(tableId).querySelector("tbody");
            tbody.innerHTML = "";
            for (const item of items) {
                const tr = document.createElement("tr");
                tr.innerHTML = `
                    <td>${item.bookTitle}</td>
                    <td>${item.dateOfIssue}</td>
                    <td>${item.returnUntil ?? item.returnDate ?? ""}</td>
                    ${showRenew ? `<td><button class="btn btn-sm btn-secondary" onclick="renew(${item.issueId})">Renew</button></td>` : ""}
                `;
                tbody.appendChild(tr);
            }
        }

        // Issue / Return buttons
        document.getElementById("issue-btn").addEventListener("click", async () => {
            const bookKey = document.getElementById("book-key").value;
            const res = await fetch(`/Circulation/IssueBook`, {
                method: "POST",
                headers: {"Content-Type":"application/json"},
                body: JSON.stringify({ customerId: selectedCustomer, bookKey })
            });
            const data = await res.json();
            if (!data.success) { alert(data.message); return; }
            alert("Book issued");
        });

        document.getElementById("return-btn").addEventListener("click", async () => {
            const bookKey = document.getElementById("book-key").value;
            const res = await fetch(`/Circulation/ReturnBook`, {
                method: "POST",
                headers: {"Content-Type":"application/json"},
                body: JSON.stringify({ customerId: selectedCustomer, bookKey })
            });
            const data = await res.json();
            if (!data.success) { alert(data.message); return; }
            alert("Book returned");
        });

        function renew(issueId) {
            fetch(`/Circulation/RenewBook`, {
                method:"POST",
                headers: {"Content-Type":"application/json"},
                body: JSON.stringify({ issueId })
            }).then(r => r.json()).then(d => { if(!d.success) alert(d.message); else alert("Renewed!"); });
        }
    </script>
}
